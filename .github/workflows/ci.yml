name: CI

on:
  push:
    branches:
      - master
      - next
      - staging
      - trying
  pull_request:
    branches:
      - master
      - next

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - name: test
        env:
          CI: true
          WITH_LOG: true
          LIGHTHOUSE_CHROMIUM_PATH: 'which google-chrome-stable'
        run: npm run test

  ci-success:
    name: ci
    if: ${{ success() }}
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        run: exit 0
